#!/usr/bin/bash


# Modified for run any command for any time and at the end return executed command status. <mohsen.amani5@gmail.com>

VERBOSE=0
NUM=5
INTERVAL=10
SUCCESS=1

function help {
	cat <<EOT
Usage: $0 [OPTIONS] COMMAND
Available options:
	-h: Show this help output
	-v: Verbose mode 
	-n: Number of tries (Default: 5)
	-i: Interval seconds (Default: 10)
Examples:
	$0 -v COMMAND
	$0 -v -n 3 -i 2 COMMAND
	$0 -v -i 5 COMMAND
	$0 -i 5 -n 2 COMMAND
EOT
}

function Check_number {
	if [[ "$1" =~  ^[0-9]+$ ]]; then
		return 0
	else
		return 1
	fi
}

if [[ $# -eq 0 ]]; then
	help
	exit 0
fi

while [[ $# -ne 0 ]]; do
	case $1 in
		-h | --help)
			help
			exit 0
			;;
		-v)
			VERBOSE=1
			shift
			;;
		-n)
			Check_number $2
			if [[ $? -ne 0 ]]; then
				help
				exit 1
			fi
			NUM=$2
			shift 2
			;;
		-i)
			Check_number $2
			if [[ $? -ne 0 ]]; then
				help
				exit 1
			fi
			INTERVAL=$2
			shift 2
			;;
		*)
			COMMAND=$*
			break
			
	esac
done

if [[ -z $COMMAND ]]; then
	help
	exit 
fi

if [[ $VERBOSE -eq 1 ]]; then
	cat<<EOL
VERBOSE=$VERBOSE
NUM=$NUM
INTERVAL=$INTERVAL
COMMAND=$COMMAND

EOL
fi


for i in $(seq 1 $NUM); do
	$($COMMAND)
	if [[ $? -eq 0 ]]; then
		SUCCESS=0
		break
	else
		if [[ $VERBOSE -eq 1 ]]; then
			echo "[INFO] Try $i failed. Sleep for $INTERVAL seconds..."
		fi
		sleep $INTERVAL
	fi
done


if [[ $SUCCESS -eq 0 ]]; then
	if [[ $VERBOSE -eq 1 ]]; then
		echo "[INFO] Command got executed successfully."
	fi
	exit 0
else
	if [[ $VERBOSE -eq 1 ]]; then
		echo "[ERROR] Threshold reached and command operation failed."
	fi
	exit 1
fi
